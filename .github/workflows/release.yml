name: Release

on:
  push:
    tags:
    - 0.*
    - 1.*

jobs:
  binary:
    strategy:
      fail-fast: false
      matrix:
        msystem:
        - 'MINGW32'
        - 'UCRT64'
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4

    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >-
          git
        pacboy: >-
          toolchain:p
          glib2:p
          cmake:p

    - name: Pre-build
      run: |
        cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo

    - name: Build
      run: |
        cmake --build build -v

    - name: Create binary archive
      run: |
        cmake --build build -v --target package

    - uses: actions/upload-artifact@v3
      with:
        name: binary
        path: 'build/rifiuti2-*.zip'
        if-no-files-found: error

  source:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: >
        sudo apt-get install -y
        build-essential
        cmake
        ninja-build
        libglib2.0-dev
        libxml2-utils

    - name: Pre-build
      run: |
        cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo

    - name: Create source archive
      run: |
        cmake --build build -v --target package_source

    - uses: actions/upload-artifact@v3
      with:
        name: source
        path: 'build/rifiuti2-*.xz'
        if-no-files-found: error

  release:
    needs:
    - binary
    - source
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment: release
    steps:
      - name: Get source artifacts
        uses: actions/download-artifact@v3
        with:
          name: source

      - name: Get binary artifacts
        uses: actions/download-artifact@v3
        with:
          name: binary

      # BUG: No arg with space can be passed into 'args' below,
      # quotes would mess up the command line passed into docker
      - uses: thomasdesr/minisign-action@v1
        with:
          args: -S -m *.xz *.zip
          minisign_key: ${{ secrets.MINISIGN_SECKEY }}
          password: ${{ secrets.MINISIGN_PASS }}

      - name: Create release notes fragment
        run: |
          mkdir notes
          echo ${{ vars.RELEASE_NOTES }} | base64 -d - > notes/notes.md

      - uses: ncipollo/release-action@v1
        with:
          artifacts: '*.*'
          artifactErrorsFailBuild: true
          draft: true
          bodyFile: 'notes/notes.md'

